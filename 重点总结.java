===================================================================项目用到的技术点
二十七、购物车的实现
   分为两点用户已经登录和用户未登录；
   用户未登录我们会将购物车信息存储到cookie当中。如果用户去登录，我们会将Cookie中的数据和用户购物车数据合并到并存储到Redis中，并将cooike的数据清除；

二十八、搜索实现流程 
   在电商项目中，用solr来实现搜索。首先我们得安装solr，并配置检索域，我们一般在查询所有的基础上来过滤查询关键字，一般包括品牌、规格、分类。分类用分组查询来显示对应的规格和品牌。用模板来规定规格和品牌的信息；

二十九、SolrCloud的认识
   类型数据库集群，将solr分片为多个solr，分片可以解决大量数据的问题；
   特色：1、集中式配置信息，将配置信息交个zookeeper集群管理。
         2、自动容错：某一个solr挂掉，主从结构的从节点会顶上。
         3、近实时搜索：新增加的数据，可以立刻查出来。
         4、自动负载均衡：solr会依次交替查询，实行负载均衡策略。选偶数个节点，作为主从结构。

三十、首页作为静态页面
     访问量大、更新频率低的场景。
     静态化处理：freemarker,用java编写的模板引擎，基于模板可以生成对应的文本信息。与web容器无关，可以生成j静态页、sp、xml等。只要模板和模板数据
     网站首页变为静态页，解决大量访问问题，不再访问数据库、tomcat；
三十一、网站高并发解决
  redis缓存、freemarker静态页、tomcat集群、nginx动静分离、读写分离

三十二、解决网站跨域
  1、在后台加上头信息，允许域名能够请求，并能够发送cookie信息。
 springmvc 注解
三十三、平台发送短消息
  阿里大于比较稳定、支持多种短信、语音、图片，只要将阿里大于提供的SDK的demo引入到案例中，就可以发送短信，只要一个账户和签名、模板就可以使用。

    


二、单点登录：SSO,在相互信任的系统之间，一个系统登录了，其他系统就不用登录了；采用cas实现；
    ①当用户请求客户端时，客户端会判断你是否登录，如果没有登录，就会重定向到Cas服务端去登录，服务端与用户进行浏览器交互；
    ②用户输入账号和密码后，进行用户认证，认证通过后，服务端会颁发一个票据给用户，直接重定向到原来的地址；
    ③客户端并不知道是否已经登录，拿着票据去服务端进行校验，验证票据有效后，会返回用户的信息给客户端，并允许用户访问。
====================================================================消息队列
三、JMS支持哪几种类型；
    TextMessage:字符串类型
    MapMessage:键值对类型
    ObjectMessage:对象类型
    BytesMessage:字节类型
    StreamMessage:数据流类型


四、MQ(消息队列)支持哪几种消息传递类型?
    1、点对点模式：一个生产者和一个消费者；
    2、订阅模式：一个生产者，多个消费者；

十八、消息队列采用ActiveMQ的优缺点？
    优点：能解决大量高并发问题，传输速度快、支持多种协议和多种语言
    缺点：传输数据不能太大，太大容易影响性能问题。如果ActiveMQ挂掉，可以采用集群。

十八、项目中用ActiveMQ解决了什么问题？
   用ActiveMQ解决分布式系统中的通用问题，解耦；

=========================================================================================MyBatis
五、MyBatis中除了select、update、delete、insert标签还有哪些标签？                              ||
    resultmap：表的字段与javabean的属性名不一致的情况做为映射关系；                            ||
    sql:主要封装常用的sql片段，提高代码的重复利用                                              ||
    include：引用sql片段就用include标签                                                        ||
    selectkey：查询主键自增的返回值，uuid也可以使用；                                          ||
    where：固定where 并去掉第一个and或者or                                                     ||
    set：动态修改                                                                              ||
    foreach：批量增加  查询IN                                                                  ||
    choose、when、otherwise条件判断                                                            ||
                                                                                               ||
                                                                                               ||
六、MyBatis实现一对一和一对多的实现方式？                                                      ||
   ①一对一：association来实现一对一查询一次或者调用select外部查询，传递一个入参；             ||
   ②一对多：collection来实现一对多一次查询和分两次查询，传递一个查询条件；                    ||
                                                                                               ||
                                                                                               ||
七、MyBatis中#{}和${}的区别？                                                                  ||
   #{}：采用预编译方式，在sql语句当中作为一个占位符，将对应的参数转义为字符串，防止sql注入；   ||
   ${}:采用的是拼接语句的方式，传入的参数直接拼接在sql后面，容易发生sql注入问题；              ||
                                                                                               ||
                                                                                               ||
十七、MyBatis单表增删改查，提升开发效率                                                        ||
  通用Mapper，丰富的单表操作，空值和非空值，Example条件查询；                                  ||
=================================================================================================


====================================================================SpringBoot
八、SpringBoot的认识？
   SpringBoot不是一个新的框架，而是为Spring开发提供更快的入门体验。纯注解开发，没有xml配置；通过无需关注jar包导入和版本冲突的管理；
   让我们开发者关系业务逻辑就好了，不用再去关系复杂的那些配置；优势：纯注解配置、无xml文件、jar包导入和版本冲突的解决
九、SpringBoot读取配置文件信息？
  Environment来读取key；
十、jarSpringBoot的jar包导入原理？
   集成父工程，导入相应的jar包，利用的是maven的依赖传递；自身集成了Tomcat，修改application.properties来覆盖底层的默认配置；
===================================================================================
十一、分布式Id生成
   利用开源的推特的snowflake算法，每秒可以产生26万个id；
   原理：1为不用41位时间戳、10位的工作机器码 12位的序列号
============================================================Spring
十二、Spring  IOC
    ioc就是控制反转，将创建对象的权利交给容器，举例：以前是new一个实例，现在用框架去创建；
    依赖注入：对象注入，给对象赋值的过程；依赖注入有三种：构造函数注入、setter方法注入、集合注入
十二、AOP 
  AOP:1、aop是面向切面编程，底层就是动态代理，两种实现方式jdk动态代理和cglib动态代理，解决重复出现的代码 
      2、在spring中，在做增删改的过程中，我们要做 事务的控制，要频繁的开启事务，提交事务，以及事务回滚都要手动去写。
         引用aop后，我们就只要关心业务流程，不用再去写这些复杂的代码。还有对于日志的操作，生成日志记录；
      3、spring的声明式事务就是一个很好的案例，在方法的调用前后进行增强；
十三、声明式事务：
     注解的方式：配置事务管理器，开启注解驱动，@Transactional
     配置文件的方式：配置事务管理器、事务的传播特性、aop配置指定切点；
    小型应用中用注解，大型用xml配置，一次配置就全部使用。
十四、Spring对象实例化的三种方式
    1、调用无参构造函数 <bean class> 2、使用静态工厂创建<无需使用工厂对象，静态方法创建实例>  3、普通工厂创建<创建工厂对象，再调用方法创建>

一、BeanFactory与ApplicationContex的区别？
   BeanFactory与ApplicationContex都是Spring的容器，都可以创建对象的实例；不同之处，创建对象的时间不一样。
   BeanFactory当容器加载时，对象并未创建，什么时候用到才创建，而ApplicationContex加载容器时，对象就会创建，都是单例模式；
   优点：BeanFactory启动应用占用资源比较少，对于资源要求较高的应用有优势；
         对于ApplicationContex，所有Bean在启动时就加载了，系统运行速度快；可以尽早的发现配置问题，建议web应用，启动时就把所有的bean加载；
十五、Spring单例和多例的声明周期
   单例生命周期：程序运行时，容器加载则立即创建单例对象
                 容器存在，则对象的实例就一直存在
                 容器销毁，则对象实例销毁；
   多例生命周期：当需要使用对象时，对象才创立；
                 当对象被调用，就一直存在；
                 销毁由java 的垃圾回收机制去销毁；
十六、Spring Bean的作用于之间区别：
    Singleton：单例模式，只有一个实例；
    prototype：多例模式，每一个bean有提供实例
    request： 每一次请求，请求结束，垃圾回收机制回收；
    session： 一次会话中，session过期销毁；
    global-session：
===========================================================================
===========================================================================Redis
二十、Redis支持的数据类型
通过key、value的形式：String ；List ；Set ；Sorted Set；hashes，list和set是队列形式；

二十一、Redis队列有哪些数据类型
 list和set，一个有序一个无序、push和pop来存与取。秒杀抢单解决高并发问题；

二十二、Redis持久方案
  1、日志模式：存到aos文件中，记录了增加和修改的日志记录，容易产生脏数据，且日志文件会越来越大。
  2、快照模式：RDF每隔一段时间对整体文件镜像备份，如果redis一旦宕机，会发生数据丢失；
	微服务架构
	所谓微服务就是将系统各个相关的独立模块拆分出来
	构建成N个小工程独立发布运行，对外提供服务

二十三、Redis集群的原理
  redis存是key、value的形式存取，将每个key求出hash值，通过出crc16算法，得到余数会在0到16383之间，
  集群就是将16383哈希槽分配到集群的结点上，余数对应的哈希槽范围，就存在redis集群环境中；
  取就是根据key的hash值，通过crc16算法求余去匹配相对的哈希槽，并得到value的值。
  redis集群的特点，结点为奇数，如果有一半以上的结点挂了，集群就挂掉了。

============================================================================MySql数据量访问
二十四、单台MySQL数据量过大处理？
  分片：将数据分片，多台MySQL同时处理。利用到MyCat技术。

二十五、MyCat认识
   MyCat就是数据库，为中间件。连接数据库只要连接mycat就可以了。通过mycat接收请求和处理少量数据。逻辑性数据库，
真实数据库为物理数据库，每个数据库叫做分片；

二十六、分片类型
  垂直拆分与水平拆分；
  垂直：按照相关业务逻辑数据的表拆分出来，不同数据的表结构是不一样的
  水平：将数据库直接拆分为不同的数据库，比如一分为二。

































